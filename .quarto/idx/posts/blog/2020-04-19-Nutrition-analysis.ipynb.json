{"title":"Nutrient Density and Value Data Visualization","markdown":{"yaml":{"aliases":["/2020/04/19/Nutrition-analysis"],"date":"2020-04-19","image":"images/posts/nutrition-analysis/nonmeatEnergy.png","output-file":"2020-04-19-nutrition-analysis.html","title":"Nutrient Density and Value Data Visualization","description":"This is a project I made to analyze the amount of protein the various animal and vegetable products people can consume.","author":"progressEdd","categories":["Analysis"]},"headingText":"About","containsRefs":false,"markdown":"\n\n\n\n<h1>Table of Contents<span class=\"tocSkip\"></span></h1>\n<div class=\"toc\"><ul class=\"toc-item\"><li><span><a href=\"#Nutrient-Density-and-Value-Data-Visualization\" data-toc-modified-id=\"Nutrient-Density-and-Value-Data-Visualization-1\"><span class=\"toc-item-num\">1&nbsp;&nbsp;</span>Nutrient Density and Value Data Visualization</a></span></li><li><span><a href=\"#About\" data-toc-modified-id=\"About-2\"><span class=\"toc-item-num\">2&nbsp;&nbsp;</span>About</a></span></li><li><span><a href=\"#Importing-libraries\" data-toc-modified-id=\"Importing-libraries-3\"><span class=\"toc-item-num\">3&nbsp;&nbsp;</span>Importing libraries</a></span></li><li><span><a href=\"#Raw-Data\" data-toc-modified-id=\"Raw-Data-4\"><span class=\"toc-item-num\">4&nbsp;&nbsp;</span>Raw Data</a></span></li><li><span><a href=\"#Largest-values\" data-toc-modified-id=\"Largest-values-5\"><span class=\"toc-item-num\">5&nbsp;&nbsp;</span>Largest values</a></span></li><li><span><a href=\"#Plotting-Function\" data-toc-modified-id=\"Plotting-Function-6\"><span class=\"toc-item-num\">6&nbsp;&nbsp;</span>Plotting Function</a></span><ul class=\"toc-item\"><li><span><a href=\"#Arguments\" data-toc-modified-id=\"Arguments-6.1\"><span class=\"toc-item-num\">6.1&nbsp;&nbsp;</span>Arguments</a></span></li><li><span><a href=\"#What-Occurs-During-a-Function-Call\" data-toc-modified-id=\"What-Occurs-During-a-Function-Call-6.2\"><span class=\"toc-item-num\">6.2&nbsp;&nbsp;</span>What Occurs During a Function Call</a></span></li></ul></li><li><span><a href=\"#Charts\" data-toc-modified-id=\"Charts-7\"><span class=\"toc-item-num\">7&nbsp;&nbsp;</span>Charts</a></span><ul class=\"toc-item\"><li><span><a href=\"#All-Energy-Values-Comparison\" data-toc-modified-id=\"All-Energy-Values-Comparison-7.1\"><span class=\"toc-item-num\">7.1&nbsp;&nbsp;</span>All Energy Values Comparison</a></span></li><li><span><a href=\"#All-Protein-Values-Comparison\" data-toc-modified-id=\"All-Protein-Values-Comparison-7.2\"><span class=\"toc-item-num\">7.2&nbsp;&nbsp;</span>All Protein Values Comparison</a></span></li><li><span><a href=\"#All-Fat-Values-Comparison\" data-toc-modified-id=\"All-Fat-Values-Comparison-7.3\"><span class=\"toc-item-num\">7.3&nbsp;&nbsp;</span>All Fat Values Comparison</a></span></li><li><span><a href=\"#All-Saturated-Fat-Values-Comparison\" data-toc-modified-id=\"All-Saturated-Fat-Values-Comparison-7.4\"><span class=\"toc-item-num\">7.4&nbsp;&nbsp;</span>All Saturated Fat Values Comparison</a></span></li><li><span><a href=\"#All-Cholesterol-Values-Comparison\" data-toc-modified-id=\"All-Cholesterol-Values-Comparison-7.5\"><span class=\"toc-item-num\">7.5&nbsp;&nbsp;</span>All Cholesterol Values Comparison</a></span></li><li><span><a href=\"#All-Vitamn-Values-Comparison\" data-toc-modified-id=\"All-Vitamn-Values-Comparison-7.6\"><span class=\"toc-item-num\">7.6&nbsp;&nbsp;</span>All Vitamn Values Comparison</a></span></li><li><span><a href=\"#All-Sodium-Values-Comparison\" data-toc-modified-id=\"All-Sodium-Values-Comparison-7.7\"><span class=\"toc-item-num\">7.7&nbsp;&nbsp;</span>All Sodium Values Comparison</a></span></li><li><span><a href=\"#All-Phosphorus-Values-Comparison\" data-toc-modified-id=\"All-Phosphorus-Values-Comparison-7.8\"><span class=\"toc-item-num\">7.8&nbsp;&nbsp;</span>All Phosphorus Values Comparison</a></span></li><li><span><a href=\"#All-Iron-Values-Comparison\" data-toc-modified-id=\"All-Iron-Values-Comparison-7.9\"><span class=\"toc-item-num\">7.9&nbsp;&nbsp;</span>All Iron Values Comparison</a></span></li><li><span><a href=\"#All-Zinc-Values-Comparison\" data-toc-modified-id=\"All-Zinc-Values-Comparison-7.10\"><span class=\"toc-item-num\">7.10&nbsp;&nbsp;</span>All Zinc Values Comparison</a></span></li><li><span><a href=\"#All-Retail-Cost-Comparison\" data-toc-modified-id=\"All-Retail-Cost-Comparison-7.11\"><span class=\"toc-item-num\">7.11&nbsp;&nbsp;</span>All Retail Cost Comparison</a></span></li></ul></li><li><span><a href=\"#Testing\" data-toc-modified-id=\"Testing-8\"><span class=\"toc-item-num\">8&nbsp;&nbsp;</span>Testing</a></span><ul class=\"toc-item\"><li><span><a href=\"#Initializing-Test-Variables\" data-toc-modified-id=\"Initializing-Test-Variables-8.1\"><span class=\"toc-item-num\">8.1&nbsp;&nbsp;</span>Initializing Test Variables</a></span></li><li><span><a href=\"#Testing-if-Saturated-Fat-Exists-in-ref4-Dictonary\" data-toc-modified-id=\"Testing-if-Saturated-Fat-Exists-in-ref4-Dictonary-8.2\"><span class=\"toc-item-num\">8.2&nbsp;&nbsp;</span>Testing if <code>Saturated Fat</code> Exists in <code>ref4</code> Dictonary</a></span></li><li><span><a href=\"#Testing-Dictionary-Outputs-In-Relation-to-Variables\" data-toc-modified-id=\"Testing-Dictionary-Outputs-In-Relation-to-Variables-8.3\"><span class=\"toc-item-num\">8.3&nbsp;&nbsp;</span>Testing Dictionary Outputs In Relation to Variables</a></span></li><li><span><a href=\"#Testing-Solution-To-Backslashes-Causing-Issues-in-Python\" data-toc-modified-id=\"Testing-Solution-To-Backslashes-Causing-Issues-in-Python-8.4\"><span class=\"toc-item-num\">8.4&nbsp;&nbsp;</span>Testing Solution To Backslashes Causing Issues in Python</a></span></li></ul></li><li><span><a href=\"#Previous-versions-of-functions\" data-toc-modified-id=\"Previous-versions-of-functions-9\"><span class=\"toc-item-num\">9&nbsp;&nbsp;</span>Previous versions of functions</a></span><ul class=\"toc-item\"><li><span><a href=\"#Energy-Values-Plotting-Function\" data-toc-modified-id=\"Energy-Values-Plotting-Function-9.1\"><span class=\"toc-item-num\">9.1&nbsp;&nbsp;</span>Energy Values Plotting Function</a></span></li><li><span><a href=\"#Protein-Values-Plotting-Function\" data-toc-modified-id=\"Protein-Values-Plotting-Function-9.2\"><span class=\"toc-item-num\">9.2&nbsp;&nbsp;</span>Protein Values Plotting Function</a></span></li></ul></li></ul></div>\n\nThis is a project I made to analyze the amount of protein the various animal and vegetable products people can consume. \n\nIn this post, I learned the basics of using matplotlib. A future post might be refining this post\n\nThe data was imported from <br>\n<a href=\"https://www.sciencedirect.com/science/article/pii/S0924224417300067\">Bohrer, B. M. (2017). Review: Nutrient density and nutritional value of meat products and non-meat foods high in protein. Trends in Food Science & Technology, 65, 103-112. doi:10.1016/j.tifs.2017.04.016\n</a>. \n\n\n# Importing libraries\n\nThe categories variables map to the text from the table. I made these variables to test the function\n\n# Raw Data\nOnce we have loaded the csv files, I will take a look to see that the values are correct and check if there are any noticeable trends\n\n# Largest values\n\nThis Dataframe displays the 10 products that have the most energy value (kcal/US$). I wanted to see which protein product gave you the most Energy for how much you pay.\n\n# Plotting Function\nThese are functions I wrote to plot energy value and protein content. \n\n## Arguments\nThe arguments include a dataframe, and a string variable called ```category```, the variable ```category``` helps determine whether we will plot a specific protein product or if it will plot all graphs.\n\n## What Occurs During a Function Call\nWhen the function is called, the variables ```skipCheck```, ```categoryCase```, and ```columnTitleCase``` are initialized the variables that end in ```case```, convert the lowercase to a title to match the dictionary entry. Next, a dictionary is initialized for all the categories of the protein products. In the next line, we will use a ```if``` statement to check which dataframe we are processing, since ```df2``` has the retail cost, we will look for ```retail cost```, if the column exists, we will set ```columnDictionary``` to the second ```columnCostDictionary``` we initialized, otherwise the default dictionary will be ```columnRegularDictionary```. After initializing the dictionary, we will check to see if the argument for ```category``` exists in the dictionaries we initialized previously. If ```category``` is not in ```columnDictionary``` we will have the function exit and spit a message telling the user they made a misspelling. \n\nOnce we finish the verification, we will set the plot specific setttings. The first ```if``` statement will check if ```categoryCase``` (the first letters of all words capitalized), is in the dictionary ```categoryDictionary```. If ```categoryCase``` matches ```Meat```, ```Fish```, or ```Non_Meat```, we will have it plot only for the specifc protein product. Otherwise, we will use the settings for a graph containing all protein products.\n\nWith the plot specifc settings complete, we can set the general plot settings and return the plot object. Outside of the function, we will use the ```.show()``` command to display the plot we generated. I left the ```.show()``` outside of the function so that I could prevent myself from running out of cpu.\n\n# Charts\nAfter all the work, Behold! We have the final product\n\n## All Energy Values Comparison\n\n## All Protein Values Comparison\n\n## All Fat Values Comparison\n\n## All Saturated Fat Values Comparison\n\n## All Cholesterol Values Comparison\n\n## All Vitamn Values Comparison\n\n## All Sodium Values Comparison\n\n## All Phosphorus Values Comparison\n\n## All Iron Values Comparison\n\n## All Zinc Values Comparison\n\n## All Retail Cost Comparison\n\n# Testing\nThis section are tests I made to check dictionaries and lists outside of the function\n\n## Initializing Test Variables\n\n## Testing if `Saturated Fat` Exists in `ref4` Dictonary\n\n## Testing Dictionary Outputs In Relation to Variables\n\n## Testing Solution To Backslashes Causing Issues in Python\n\n# Previous versions of functions\nThese are previous iterations of the ```plotNutrition()``` function, I decided to keep them at the end in case you were curious about the evolution of nutrition function. When I started this project, I was had a early deadline. I started with a longer function so that could plot graphs for specific columns.\n\nAt the time, I did not realize that lines 11-15 were relatively the same. I also was not very comfortable with substituting dictionary entries for strings. When I had more time, I started to work on making the plot function more modular. In the final product you will notice that I have formal dictionaries calls.\n\nDictionary calls make the code more modular, but they also abstract the code more. If you are not careful with keeping track of your dictionary calls, diagnosing errors in the code become much harder\n\n## Energy Values Plotting Function\n\n## Protein Values Plotting Function\n","srcMarkdownNoYaml":"\n\n\n\n<h1>Table of Contents<span class=\"tocSkip\"></span></h1>\n<div class=\"toc\"><ul class=\"toc-item\"><li><span><a href=\"#Nutrient-Density-and-Value-Data-Visualization\" data-toc-modified-id=\"Nutrient-Density-and-Value-Data-Visualization-1\"><span class=\"toc-item-num\">1&nbsp;&nbsp;</span>Nutrient Density and Value Data Visualization</a></span></li><li><span><a href=\"#About\" data-toc-modified-id=\"About-2\"><span class=\"toc-item-num\">2&nbsp;&nbsp;</span>About</a></span></li><li><span><a href=\"#Importing-libraries\" data-toc-modified-id=\"Importing-libraries-3\"><span class=\"toc-item-num\">3&nbsp;&nbsp;</span>Importing libraries</a></span></li><li><span><a href=\"#Raw-Data\" data-toc-modified-id=\"Raw-Data-4\"><span class=\"toc-item-num\">4&nbsp;&nbsp;</span>Raw Data</a></span></li><li><span><a href=\"#Largest-values\" data-toc-modified-id=\"Largest-values-5\"><span class=\"toc-item-num\">5&nbsp;&nbsp;</span>Largest values</a></span></li><li><span><a href=\"#Plotting-Function\" data-toc-modified-id=\"Plotting-Function-6\"><span class=\"toc-item-num\">6&nbsp;&nbsp;</span>Plotting Function</a></span><ul class=\"toc-item\"><li><span><a href=\"#Arguments\" data-toc-modified-id=\"Arguments-6.1\"><span class=\"toc-item-num\">6.1&nbsp;&nbsp;</span>Arguments</a></span></li><li><span><a href=\"#What-Occurs-During-a-Function-Call\" data-toc-modified-id=\"What-Occurs-During-a-Function-Call-6.2\"><span class=\"toc-item-num\">6.2&nbsp;&nbsp;</span>What Occurs During a Function Call</a></span></li></ul></li><li><span><a href=\"#Charts\" data-toc-modified-id=\"Charts-7\"><span class=\"toc-item-num\">7&nbsp;&nbsp;</span>Charts</a></span><ul class=\"toc-item\"><li><span><a href=\"#All-Energy-Values-Comparison\" data-toc-modified-id=\"All-Energy-Values-Comparison-7.1\"><span class=\"toc-item-num\">7.1&nbsp;&nbsp;</span>All Energy Values Comparison</a></span></li><li><span><a href=\"#All-Protein-Values-Comparison\" data-toc-modified-id=\"All-Protein-Values-Comparison-7.2\"><span class=\"toc-item-num\">7.2&nbsp;&nbsp;</span>All Protein Values Comparison</a></span></li><li><span><a href=\"#All-Fat-Values-Comparison\" data-toc-modified-id=\"All-Fat-Values-Comparison-7.3\"><span class=\"toc-item-num\">7.3&nbsp;&nbsp;</span>All Fat Values Comparison</a></span></li><li><span><a href=\"#All-Saturated-Fat-Values-Comparison\" data-toc-modified-id=\"All-Saturated-Fat-Values-Comparison-7.4\"><span class=\"toc-item-num\">7.4&nbsp;&nbsp;</span>All Saturated Fat Values Comparison</a></span></li><li><span><a href=\"#All-Cholesterol-Values-Comparison\" data-toc-modified-id=\"All-Cholesterol-Values-Comparison-7.5\"><span class=\"toc-item-num\">7.5&nbsp;&nbsp;</span>All Cholesterol Values Comparison</a></span></li><li><span><a href=\"#All-Vitamn-Values-Comparison\" data-toc-modified-id=\"All-Vitamn-Values-Comparison-7.6\"><span class=\"toc-item-num\">7.6&nbsp;&nbsp;</span>All Vitamn Values Comparison</a></span></li><li><span><a href=\"#All-Sodium-Values-Comparison\" data-toc-modified-id=\"All-Sodium-Values-Comparison-7.7\"><span class=\"toc-item-num\">7.7&nbsp;&nbsp;</span>All Sodium Values Comparison</a></span></li><li><span><a href=\"#All-Phosphorus-Values-Comparison\" data-toc-modified-id=\"All-Phosphorus-Values-Comparison-7.8\"><span class=\"toc-item-num\">7.8&nbsp;&nbsp;</span>All Phosphorus Values Comparison</a></span></li><li><span><a href=\"#All-Iron-Values-Comparison\" data-toc-modified-id=\"All-Iron-Values-Comparison-7.9\"><span class=\"toc-item-num\">7.9&nbsp;&nbsp;</span>All Iron Values Comparison</a></span></li><li><span><a href=\"#All-Zinc-Values-Comparison\" data-toc-modified-id=\"All-Zinc-Values-Comparison-7.10\"><span class=\"toc-item-num\">7.10&nbsp;&nbsp;</span>All Zinc Values Comparison</a></span></li><li><span><a href=\"#All-Retail-Cost-Comparison\" data-toc-modified-id=\"All-Retail-Cost-Comparison-7.11\"><span class=\"toc-item-num\">7.11&nbsp;&nbsp;</span>All Retail Cost Comparison</a></span></li></ul></li><li><span><a href=\"#Testing\" data-toc-modified-id=\"Testing-8\"><span class=\"toc-item-num\">8&nbsp;&nbsp;</span>Testing</a></span><ul class=\"toc-item\"><li><span><a href=\"#Initializing-Test-Variables\" data-toc-modified-id=\"Initializing-Test-Variables-8.1\"><span class=\"toc-item-num\">8.1&nbsp;&nbsp;</span>Initializing Test Variables</a></span></li><li><span><a href=\"#Testing-if-Saturated-Fat-Exists-in-ref4-Dictonary\" data-toc-modified-id=\"Testing-if-Saturated-Fat-Exists-in-ref4-Dictonary-8.2\"><span class=\"toc-item-num\">8.2&nbsp;&nbsp;</span>Testing if <code>Saturated Fat</code> Exists in <code>ref4</code> Dictonary</a></span></li><li><span><a href=\"#Testing-Dictionary-Outputs-In-Relation-to-Variables\" data-toc-modified-id=\"Testing-Dictionary-Outputs-In-Relation-to-Variables-8.3\"><span class=\"toc-item-num\">8.3&nbsp;&nbsp;</span>Testing Dictionary Outputs In Relation to Variables</a></span></li><li><span><a href=\"#Testing-Solution-To-Backslashes-Causing-Issues-in-Python\" data-toc-modified-id=\"Testing-Solution-To-Backslashes-Causing-Issues-in-Python-8.4\"><span class=\"toc-item-num\">8.4&nbsp;&nbsp;</span>Testing Solution To Backslashes Causing Issues in Python</a></span></li></ul></li><li><span><a href=\"#Previous-versions-of-functions\" data-toc-modified-id=\"Previous-versions-of-functions-9\"><span class=\"toc-item-num\">9&nbsp;&nbsp;</span>Previous versions of functions</a></span><ul class=\"toc-item\"><li><span><a href=\"#Energy-Values-Plotting-Function\" data-toc-modified-id=\"Energy-Values-Plotting-Function-9.1\"><span class=\"toc-item-num\">9.1&nbsp;&nbsp;</span>Energy Values Plotting Function</a></span></li><li><span><a href=\"#Protein-Values-Plotting-Function\" data-toc-modified-id=\"Protein-Values-Plotting-Function-9.2\"><span class=\"toc-item-num\">9.2&nbsp;&nbsp;</span>Protein Values Plotting Function</a></span></li></ul></li></ul></div>\n\n# About\nThis is a project I made to analyze the amount of protein the various animal and vegetable products people can consume. \n\nIn this post, I learned the basics of using matplotlib. A future post might be refining this post\n\nThe data was imported from <br>\n<a href=\"https://www.sciencedirect.com/science/article/pii/S0924224417300067\">Bohrer, B. M. (2017). Review: Nutrient density and nutritional value of meat products and non-meat foods high in protein. Trends in Food Science & Technology, 65, 103-112. doi:10.1016/j.tifs.2017.04.016\n</a>. \n\n\n# Importing libraries\n\nThe categories variables map to the text from the table. I made these variables to test the function\n\n# Raw Data\nOnce we have loaded the csv files, I will take a look to see that the values are correct and check if there are any noticeable trends\n\n# Largest values\n\nThis Dataframe displays the 10 products that have the most energy value (kcal/US$). I wanted to see which protein product gave you the most Energy for how much you pay.\n\n# Plotting Function\nThese are functions I wrote to plot energy value and protein content. \n\n## Arguments\nThe arguments include a dataframe, and a string variable called ```category```, the variable ```category``` helps determine whether we will plot a specific protein product or if it will plot all graphs.\n\n## What Occurs During a Function Call\nWhen the function is called, the variables ```skipCheck```, ```categoryCase```, and ```columnTitleCase``` are initialized the variables that end in ```case```, convert the lowercase to a title to match the dictionary entry. Next, a dictionary is initialized for all the categories of the protein products. In the next line, we will use a ```if``` statement to check which dataframe we are processing, since ```df2``` has the retail cost, we will look for ```retail cost```, if the column exists, we will set ```columnDictionary``` to the second ```columnCostDictionary``` we initialized, otherwise the default dictionary will be ```columnRegularDictionary```. After initializing the dictionary, we will check to see if the argument for ```category``` exists in the dictionaries we initialized previously. If ```category``` is not in ```columnDictionary``` we will have the function exit and spit a message telling the user they made a misspelling. \n\nOnce we finish the verification, we will set the plot specific setttings. The first ```if``` statement will check if ```categoryCase``` (the first letters of all words capitalized), is in the dictionary ```categoryDictionary```. If ```categoryCase``` matches ```Meat```, ```Fish```, or ```Non_Meat```, we will have it plot only for the specifc protein product. Otherwise, we will use the settings for a graph containing all protein products.\n\nWith the plot specifc settings complete, we can set the general plot settings and return the plot object. Outside of the function, we will use the ```.show()``` command to display the plot we generated. I left the ```.show()``` outside of the function so that I could prevent myself from running out of cpu.\n\n# Charts\nAfter all the work, Behold! We have the final product\n\n## All Energy Values Comparison\n\n## All Protein Values Comparison\n\n## All Fat Values Comparison\n\n## All Saturated Fat Values Comparison\n\n## All Cholesterol Values Comparison\n\n## All Vitamn Values Comparison\n\n## All Sodium Values Comparison\n\n## All Phosphorus Values Comparison\n\n## All Iron Values Comparison\n\n## All Zinc Values Comparison\n\n## All Retail Cost Comparison\n\n# Testing\nThis section are tests I made to check dictionaries and lists outside of the function\n\n## Initializing Test Variables\n\n## Testing if `Saturated Fat` Exists in `ref4` Dictonary\n\n## Testing Dictionary Outputs In Relation to Variables\n\n## Testing Solution To Backslashes Causing Issues in Python\n\n# Previous versions of functions\nThese are previous iterations of the ```plotNutrition()``` function, I decided to keep them at the end in case you were curious about the evolution of nutrition function. When I started this project, I was had a early deadline. I started with a longer function so that could plot graphs for specific columns.\n\nAt the time, I did not realize that lines 11-15 were relatively the same. I also was not very comfortable with substituting dictionary entries for strings. When I had more time, I started to work on making the plot function more modular. In the final product you will notice that I have formal dictionaries calls.\n\nDictionary calls make the code more modular, but they also abstract the code more. If you are not careful with keeping track of your dictionary calls, diagnosing errors in the code become much harder\n\n## Energy Values Plotting Function\n\n## Protein Values Plotting Function\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":false,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"jupyter"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../styles.css"],"output-file":"2020-04-19-nutrition-analysis.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.42","theme":["cosmo","brand"],"title-block-banner":true,"aliases":["/2020/04/19/Nutrition-analysis"],"date":"2020-04-19","image":"images/posts/nutrition-analysis/nonmeatEnergy.png","title":"Nutrient Density and Value Data Visualization","description":"This is a project I made to analyze the amount of protein the various animal and vegetable products people can consume.","author":"progressEdd","categories":["Analysis"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}
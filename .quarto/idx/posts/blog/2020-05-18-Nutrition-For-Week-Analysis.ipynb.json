{"title":"Generating The Total Nutritional Content For a Week","markdown":{"yaml":{"aliases":["/2020/05/18/Nutrition-For-Week-Analysis"],"date":"2020-05-18","description":"During a conversation with one of my friends, I showed them some of my work with analyzing the protein content of various meats and vegetables. After seeing the analysis, they asked me if I would be interested in analyzing the total caloric intake for a week's worth of meals.","output-file":"2020-05-18-nutrition-for-week-analysis.html","title":"Generating The Total Nutritional Content For a Week","author":"progressEdd","categories":["Analysis"]},"headingText":"Introduction","containsRefs":false,"markdown":"\n\n\n\n<h1>Table of Contents<span class=\"tocSkip\"></span></h1>\n<div class=\"toc\"><ul class=\"toc-item\"><li><span><a href=\"#Generating-The-Total-Nutritional-Content-For-a-Week\" data-toc-modified-id=\"Generating-The-Total-Nutritional-Content-For-a-Week-1\"><span class=\"toc-item-num\">1&nbsp;&nbsp;</span>Generating The Total Nutritional Content For a Week</a></span></li><li><span><a href=\"#Introduction\" data-toc-modified-id=\"Introduction-2\"><span class=\"toc-item-num\">2&nbsp;&nbsp;</span>Introduction</a></span></li><li><span><a href=\"#Loading-The-Libraries-and-Dataframes\" data-toc-modified-id=\"Loading-The-Libraries-and-Dataframes-3\"><span class=\"toc-item-num\">3&nbsp;&nbsp;</span>Loading The Libraries and Dataframes</a></span></li><li><span><a href=\"#Investigating-Dataframes\" data-toc-modified-id=\"Investigating-Dataframes-4\"><span class=\"toc-item-num\">4&nbsp;&nbsp;</span>Investigating Dataframes</a></span></li><li><span><a href=\"#Generating-The-Code\" data-toc-modified-id=\"Generating-The-Code-5\"><span class=\"toc-item-num\">5&nbsp;&nbsp;</span>Generating The Code</a></span><ul class=\"toc-item\"><li><span><a href=\"#Variables-Intialized-outside-of-the-loop\" data-toc-modified-id=\"Variables-Intialized-outside-of-the-loop-5.1\"><span class=\"toc-item-num\">5.1&nbsp;&nbsp;</span>Variables Intialized outside of the loop</a></span></li><li><span><a href=\"#Explanation-For-The-First-loop\" data-toc-modified-id=\"Explanation-For-The-First-loop-5.2\"><span class=\"toc-item-num\">5.2&nbsp;&nbsp;</span>Explanation For The First loop</a></span></li><li><span><a href=\"#Explanation-For-The-Second-Loop\" data-toc-modified-id=\"Explanation-For-The-Second-Loop-5.3\"><span class=\"toc-item-num\">5.3&nbsp;&nbsp;</span>Explanation For The Second Loop</a></span></li><li><span><a href=\"#Explanation-For-The-Third-Loop\" data-toc-modified-id=\"Explanation-For-The-Third-Loop-5.4\"><span class=\"toc-item-num\">5.4&nbsp;&nbsp;</span>Explanation For The Third Loop</a></span></li></ul></li><li><span><a href=\"#Generating-The-Summary\" data-toc-modified-id=\"Generating-The-Summary-6\"><span class=\"toc-item-num\">6&nbsp;&nbsp;</span>Generating The Summary</a></span></li><li><span><a href=\"#Tests-Cells\" data-toc-modified-id=\"Tests-Cells-7\"><span class=\"toc-item-num\">7&nbsp;&nbsp;</span>Tests Cells</a></span></li></ul></div>\n\nDuring a conversation with one of my friends, I showed them some of my work with analyzing the protein content of various meats and vegetables. After seeing the analysis, they asked me if I would be interested in analyzing the total caloric intake for a week's worth of meals.\n\nI learned a great amount concatenating, droping, and manipulating indexes in Pandas. \n\n# Loading The Libraries and Dataframes \nI was given the following data from a single file, the original file had the tables in seperate sheets. I exported the original file into seperate csv files so that I could load each table into separate dataframes\n\n# Investigating Dataframes\nBefore calculating the totals, I wanted to take a look at the dataframes, I transposed the columns in libreoffice such that the Days were columns, and the meals were rows. The majority of Pandas operations manipulate columns rather than rows. \n\nI also transposed the columns for the other dataframes (```df_meals``` and ```df_ingredients```, )as well\n\n# Generating The Code\nAfter looking at the raw data and transposing the data, I decided to use multiple for loops to solve the problem.\n\nMy general plan followed\n1. get meals for each day\n * make a dataframe for each day where there is 1 \n2. get foods for each meal\n3. add each food to a list\n4. add each ingredient to a list\n5. store sum in results\n\nThe following code iterates through all the dataframes```df_days```,```df_meals```, and ```df_ingredients``` intialized in the previous step to generate a dataframe with all the individual ingredients for all the days\n\n## Variables Intialized outside of the loop\n* ```meal_list```, ```food_list```, and ```ingredient_list``` are initially empty, we will set values for them once the loop begins.\n* ```days``` is a list of the days of the week, we will use to keep track of the day. Furthermore, we will use ```days``` to specify which column we want python to focus on \n* ```df_summary``` is a empty dataframe we will append the ingredients to\n* ```counter``` is a integer variable that that is used as a index when iterating the ```days``` list, it is set to be -1 to offset the starting column of ```df_days```\n\nall ```print()``` and ```display()``` statements were used to view the variables as the loop iterated\n\n## Explanation For The First loop\nThe first ```for``` loop iterates accross the columns of ```df_days``` dataframe in the first loop, generates a list of meals consumed in a day\n* ```column_title``` is the title of the column from ```df_days```\n* ```day``` is the current day\n* ```df_day_non_zero``` is ```df_days```, but all values greater than 0\n* ```meal_list``` uses ```df_day_non_zero``` but has only the meals quantity for a single day, ```.reset_index()```  resets the index as filtering for the day changes the index, \n```.drop(columns = \"index\")``` drops the index created by ```.reset_index()```\n\n## Explanation For The Second Loop\nThe second ```for``` loop iterates accross the columns of ```meal_list``` dataframe generated for a day from the previous step, generates a list of foods consumed in meal\n* ```meal_item``` is the title of the column from ```df_meals```\n* ```df_empty``` is a empty temporary dataframe that we generate each iteration\n* ```food_quantity``` stores the number of meal consumed in a day\n* ```df_meal_day``` is ```df_meals```, but all values greater than 0\n* ```food_list``` dataframe that uses ```df_meal_day``` to get the meal item for a particular meal\n* ```food_list[meal_item]``` dataframe that multiplies the specific quantity by the ```food_quantity```\n\n## Explanation For The Third Loop\nThe third ```for``` loop iterates through the ```food_list``` dataframe generated for a meal from the previous step, concatenates the ingredients to ```df_empty``` dataframe, uses a conditional that will multiply the nutritional value by the number of values consumed\n* ```df_current_ingredient``` is ```df_ingredients``` but when the food item matches the value from ```food_list``\n* ```ingredient_quantity``` stores the number of meal items consumed in a single meal\n\nAfter the third ```for``` loop, we will concatenate all the ingredients per meal into a single dataframe with two columns for the day and meal the item was consumed from. When creating new columns using the ```df[\"new column\"] = value``` Pandas will add the new column to the end of the columns.\n\n# Generating The Summary\nusing the grouping function in Pandas, we can genereate a summary dataframe\n\n# Tests Cells\nThe following cells were used to test solutions I tried when generating the for loop. \n\nIt was easier to run these on individual cells rather than in the nested for loop and print statements\n","srcMarkdownNoYaml":"\n\n\n\n<h1>Table of Contents<span class=\"tocSkip\"></span></h1>\n<div class=\"toc\"><ul class=\"toc-item\"><li><span><a href=\"#Generating-The-Total-Nutritional-Content-For-a-Week\" data-toc-modified-id=\"Generating-The-Total-Nutritional-Content-For-a-Week-1\"><span class=\"toc-item-num\">1&nbsp;&nbsp;</span>Generating The Total Nutritional Content For a Week</a></span></li><li><span><a href=\"#Introduction\" data-toc-modified-id=\"Introduction-2\"><span class=\"toc-item-num\">2&nbsp;&nbsp;</span>Introduction</a></span></li><li><span><a href=\"#Loading-The-Libraries-and-Dataframes\" data-toc-modified-id=\"Loading-The-Libraries-and-Dataframes-3\"><span class=\"toc-item-num\">3&nbsp;&nbsp;</span>Loading The Libraries and Dataframes</a></span></li><li><span><a href=\"#Investigating-Dataframes\" data-toc-modified-id=\"Investigating-Dataframes-4\"><span class=\"toc-item-num\">4&nbsp;&nbsp;</span>Investigating Dataframes</a></span></li><li><span><a href=\"#Generating-The-Code\" data-toc-modified-id=\"Generating-The-Code-5\"><span class=\"toc-item-num\">5&nbsp;&nbsp;</span>Generating The Code</a></span><ul class=\"toc-item\"><li><span><a href=\"#Variables-Intialized-outside-of-the-loop\" data-toc-modified-id=\"Variables-Intialized-outside-of-the-loop-5.1\"><span class=\"toc-item-num\">5.1&nbsp;&nbsp;</span>Variables Intialized outside of the loop</a></span></li><li><span><a href=\"#Explanation-For-The-First-loop\" data-toc-modified-id=\"Explanation-For-The-First-loop-5.2\"><span class=\"toc-item-num\">5.2&nbsp;&nbsp;</span>Explanation For The First loop</a></span></li><li><span><a href=\"#Explanation-For-The-Second-Loop\" data-toc-modified-id=\"Explanation-For-The-Second-Loop-5.3\"><span class=\"toc-item-num\">5.3&nbsp;&nbsp;</span>Explanation For The Second Loop</a></span></li><li><span><a href=\"#Explanation-For-The-Third-Loop\" data-toc-modified-id=\"Explanation-For-The-Third-Loop-5.4\"><span class=\"toc-item-num\">5.4&nbsp;&nbsp;</span>Explanation For The Third Loop</a></span></li></ul></li><li><span><a href=\"#Generating-The-Summary\" data-toc-modified-id=\"Generating-The-Summary-6\"><span class=\"toc-item-num\">6&nbsp;&nbsp;</span>Generating The Summary</a></span></li><li><span><a href=\"#Tests-Cells\" data-toc-modified-id=\"Tests-Cells-7\"><span class=\"toc-item-num\">7&nbsp;&nbsp;</span>Tests Cells</a></span></li></ul></div>\n\n# Introduction\nDuring a conversation with one of my friends, I showed them some of my work with analyzing the protein content of various meats and vegetables. After seeing the analysis, they asked me if I would be interested in analyzing the total caloric intake for a week's worth of meals.\n\nI learned a great amount concatenating, droping, and manipulating indexes in Pandas. \n\n# Loading The Libraries and Dataframes \nI was given the following data from a single file, the original file had the tables in seperate sheets. I exported the original file into seperate csv files so that I could load each table into separate dataframes\n\n# Investigating Dataframes\nBefore calculating the totals, I wanted to take a look at the dataframes, I transposed the columns in libreoffice such that the Days were columns, and the meals were rows. The majority of Pandas operations manipulate columns rather than rows. \n\nI also transposed the columns for the other dataframes (```df_meals``` and ```df_ingredients```, )as well\n\n# Generating The Code\nAfter looking at the raw data and transposing the data, I decided to use multiple for loops to solve the problem.\n\nMy general plan followed\n1. get meals for each day\n * make a dataframe for each day where there is 1 \n2. get foods for each meal\n3. add each food to a list\n4. add each ingredient to a list\n5. store sum in results\n\nThe following code iterates through all the dataframes```df_days```,```df_meals```, and ```df_ingredients``` intialized in the previous step to generate a dataframe with all the individual ingredients for all the days\n\n## Variables Intialized outside of the loop\n* ```meal_list```, ```food_list```, and ```ingredient_list``` are initially empty, we will set values for them once the loop begins.\n* ```days``` is a list of the days of the week, we will use to keep track of the day. Furthermore, we will use ```days``` to specify which column we want python to focus on \n* ```df_summary``` is a empty dataframe we will append the ingredients to\n* ```counter``` is a integer variable that that is used as a index when iterating the ```days``` list, it is set to be -1 to offset the starting column of ```df_days```\n\nall ```print()``` and ```display()``` statements were used to view the variables as the loop iterated\n\n## Explanation For The First loop\nThe first ```for``` loop iterates accross the columns of ```df_days``` dataframe in the first loop, generates a list of meals consumed in a day\n* ```column_title``` is the title of the column from ```df_days```\n* ```day``` is the current day\n* ```df_day_non_zero``` is ```df_days```, but all values greater than 0\n* ```meal_list``` uses ```df_day_non_zero``` but has only the meals quantity for a single day, ```.reset_index()```  resets the index as filtering for the day changes the index, \n```.drop(columns = \"index\")``` drops the index created by ```.reset_index()```\n\n## Explanation For The Second Loop\nThe second ```for``` loop iterates accross the columns of ```meal_list``` dataframe generated for a day from the previous step, generates a list of foods consumed in meal\n* ```meal_item``` is the title of the column from ```df_meals```\n* ```df_empty``` is a empty temporary dataframe that we generate each iteration\n* ```food_quantity``` stores the number of meal consumed in a day\n* ```df_meal_day``` is ```df_meals```, but all values greater than 0\n* ```food_list``` dataframe that uses ```df_meal_day``` to get the meal item for a particular meal\n* ```food_list[meal_item]``` dataframe that multiplies the specific quantity by the ```food_quantity```\n\n## Explanation For The Third Loop\nThe third ```for``` loop iterates through the ```food_list``` dataframe generated for a meal from the previous step, concatenates the ingredients to ```df_empty``` dataframe, uses a conditional that will multiply the nutritional value by the number of values consumed\n* ```df_current_ingredient``` is ```df_ingredients``` but when the food item matches the value from ```food_list``\n* ```ingredient_quantity``` stores the number of meal items consumed in a single meal\n\nAfter the third ```for``` loop, we will concatenate all the ingredients per meal into a single dataframe with two columns for the day and meal the item was consumed from. When creating new columns using the ```df[\"new column\"] = value``` Pandas will add the new column to the end of the columns.\n\n# Generating The Summary\nusing the grouping function in Pandas, we can genereate a summary dataframe\n\n# Tests Cells\nThe following cells were used to test solutions I tried when generating the for loop. \n\nIt was easier to run these on individual cells rather than in the nested for loop and print statements\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":false,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"jupyter"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../styles.css"],"output-file":"2020-05-18-nutrition-for-week-analysis.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.42","theme":["cosmo","brand"],"title-block-banner":true,"aliases":["/2020/05/18/Nutrition-For-Week-Analysis"],"date":"2020-05-18","description":"During a conversation with one of my friends, I showed them some of my work with analyzing the protein content of various meats and vegetables. After seeing the analysis, they asked me if I would be interested in analyzing the total caloric intake for a week's worth of meals.","title":"Generating The Total Nutritional Content For a Week","author":"progressEdd","categories":["Analysis"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}